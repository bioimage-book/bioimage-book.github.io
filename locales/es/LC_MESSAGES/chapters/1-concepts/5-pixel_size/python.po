# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022-2024
# This file is distributed under the same license as the bioimage-book package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Beth Cimini, 2024
# Mariana De Niz, 2024
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: bioimage-book\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-05 16:49+0000\n"
"PO-Revision-Date: 2024-03-29 18:51+0000\n"
"Last-Translator: Mariana De Niz, 2024\n"
"Language-Team: Spanish (https://app.transifex.com/center-for-open-bioimage-analysis/teams/169123/es/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es\n"
"Plural-Forms: nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? 1 : 2;\n"

#: ../../../chapters/1-concepts/5-pixel_size/python.md:15
msgid "Python:  Pixel size & dimensions"
msgstr "Python:  Tamaño de píxel y dimensiones"

#: ../../../chapters/1-concepts/5-pixel_size/python.md:17
msgid ""
"This section gives a bit of background on working with pixel sizes and "
"dimensions in Python... which is a bit more complicated than one might first"
" expect."
msgstr ""
"Esta sección proporciona un poco de información sobre cómo trabajar con "
"tamaños de píxel y dimensiones en Python... que es un poco más complicado de"
" lo que uno podría esperar a primera vista."

#: ../../../chapters/1-concepts/5-pixel_size/python.md:29
msgid "Pixel size"
msgstr "Tamaño de píxel"

#: ../../../chapters/1-concepts/5-pixel_size/python.md:31
msgid ""
"Checking the pixel size in Python has been, in my opinion, a bit of a pain -"
" because the common libraries used to read images don't always make that "
"information very easy to access."
msgstr ""
"Comprobar el tamaño de los píxeles en Python ha sido, en mi opinión, un poco"
" engorroso, porque las bibliotecas habituales utilizadas para leer imágenes "
"no siempre facilitan el acceso a esa información."

#: ../../../chapters/1-concepts/5-pixel_size/python.md:33
msgid "The situation is improving though."
msgstr "Sin embargo, la situación está mejorando."

#: ../../../chapters/1-concepts/5-pixel_size/python.md:35
msgid ""
"Here, we'll look at accessing pixel size information using two popular "
"image-reading libraries:"
msgstr ""
"A continuación, veremos cómo acceder a la información sobre el tamaño de los"
" píxeles utilizando dos conocidas bibliotecas de lectura de imágenes:"

#: ../../../chapters/1-concepts/5-pixel_size/python.md:36
msgid ""
"[`imageio`](https://pypi.org/project/imageio/) - which very commonly used, "
"and makes reading lots of common image types straightforward"
msgstr ""
"[`imageio`](https://pypi.org/project/imageio/) - de uso muy común, facilita "
"la lectura de muchos tipos comunes de imágenes."

#: ../../../chapters/1-concepts/5-pixel_size/python.md:37
msgid ""
"[`AICSImageIO`](https://pypi.org/project/aicsimageio/3.2.1/) - which is a "
"bit more complex, but has some *extremely* useful features for working with "
"scientific images"
msgstr ""
"[`AICSImageIO`](https://pypi.org/project/aicsimageio/3.2.1/) - que es un "
"poco más complejo, pero tiene algunas características *extremadamente* "
"útiles para trabajar con imágenes científicas."

#: ../../../chapters/1-concepts/5-pixel_size/python.md:41
msgid "ImageIO"
msgstr "ImageIO"

#: ../../../chapters/1-concepts/5-pixel_size/python.md:43
msgid ""
"To explore pixel sizes with `imageio`, let's return to the neuron image used"
" in the 'Channels & colors' chapter."
msgstr ""
"Para explorar el tamaño de los píxeles con `imageio`, volvamos a la imagen "
"neuronal utilizada en el capítulo 'Canales y colores'."

#: ../../../chapters/1-concepts/5-pixel_size/python.md:45
msgid ""
"The following code shows how we can read both the pixel values and the "
"metadata."
msgstr ""
"El siguiente código muestra cómo podemos leer tanto los valores de los "
"píxeles como los metadatos."

#: ../../../chapters/1-concepts/5-pixel_size/python.md:64
msgid "The metadata contains a lot of info, even including lookup tables."
msgstr ""
"Los metadatos contienen mucha información, incluso tablas de consulta."

#: ../../../chapters/1-concepts/5-pixel_size/python.md:66
msgid "Printing it a little more nicely (and skipping the LUTs), we get:"
msgstr "Imprimiéndolo un poco más bonito (y saltándonos las LUTs), obtenemos:"

#: ../../../chapters/1-concepts/5-pixel_size/python.md:74
msgid ""
"This metadata is actually quite ImageJ-specific, and other TIFFs may give "
"quite different metadata."
msgstr ""
"En realidad, estos metadatos son bastante específicos de ImageJ, y otros "
"TIFF pueden proporcionar metadatos muy diferentes."

#: ../../../chapters/1-concepts/5-pixel_size/python.md:76
msgid ""
"We can see the version of ImageJ that wrote the file, but picking out the "
"key thing we want here - the pixel size - is not so easy."
msgstr ""
"Podemos ver la versión de ImageJ que escribió el archivo, pero elegir el "
"elemento clave que queremos aquí - el tamaño de píxel - no es tan fácil."

#: ../../../chapters/1-concepts/5-pixel_size/python.md:78
msgid "Seeing `unit=um` is encouraging, but not enough."
msgstr "Ver \"unit=um\" es alentador, pero no suficiente."

#: ../../../chapters/1-concepts/5-pixel_size/python.md:80
msgid ""
"We can explore a bit more with 'properties', which imageio described as ['a "
"curated set of standardized "
"metadata'](https://imageio.readthedocs.io/en/v2.30.0/reference/userapi.html#metadata)."
msgstr ""
"Podemos explorar un poco más con 'propiedades', que imageio describe como "
"['un conjunto curado de metadatos "
"estandarizados'](https://imageio.readthedocs.io/en/v2.30.0/reference/userapi.html#metadata)."

#: ../../../chapters/1-concepts/5-pixel_size/python.md:87
msgid "Here, the `spacing=(6.25, 6.25)` seems promising."
msgstr "Aquí, el `spacing=(6.25, 6.25)` parece prometedor."

#: ../../../chapters/1-concepts/5-pixel_size/python.md:89
msgid ""
"It's tempting to suppose that means the pixel width and height are both 6.25"
" µm - *however* if I check the same image in ImageJ itself, I see the pixel "
"width and height are actually 0.16 µm... which happens to equal 1.0/6.25 µm."
msgstr ""
"Es tentador suponer que eso significa que la anchura y la altura del píxel "
"son ambas de 6.25 µm - *sin embargo* si compruebo la misma imagen en el "
"propio ImageJ, veo que la anchura y la altura del píxel son en realidad de "
"0.16 µm... lo que resulta ser igual a 1.0/6.25 µm."

#: ../../../chapters/1-concepts/5-pixel_size/python.md:95
msgid ""
"Therefore the information **is** in the metadata, but it's very easy to "
"misinterpret - and it isn't even guaranteed to be correct if the image was "
"written by some other software."
msgstr ""
"Por lo tanto, la información **está** en los metadatos, pero es muy fácil "
"malinterpretarla, y ni siquiera está garantizado que sea correcta si la "
"imagen fue escrita por algún otro software."

#: ../../../chapters/1-concepts/5-pixel_size/python.md:97
msgid ""
"So while `imageio` is excellent for reading images easily - generally just a"
" quick `im = imread(path)` - it's not necessarily the best thing to use when"
" pixel sizes (or other metadata) matter."
msgstr ""
"Así que mientras `imageio` es excelente para leer imágenes fácilmente - "
"generalmente sólo un rápido `im = imread(path)` - no es necesariamente lo "
"mejor para usar cuando el tamaño de los píxeles (u otros metadatos) "
"importan."

#: ../../../chapters/1-concepts/5-pixel_size/python.md:101
msgid "Using AICSImageIO"
msgstr "Uso de AICSImageIO"

#: ../../../chapters/1-concepts/5-pixel_size/python.md:103
msgid ""
"The best alternative I know for working with scientific (especially "
"biomedical) images is "
"[**AICSImageIO**](https://github.com/AllenCellModeling/aicsimageio). This is"
" a really useful Python library that standardizes reading and writing "
"multiple file formats - and, depending upon how it's installed, can even "
"access lots more awkward proprietary file formats with the help of [Bio-"
"Formats](http://www.openmicroscopy.org/bio-formats/)."
msgstr ""
"La mejor alternativa que conozco para trabajar con imágenes científicas "
"(especialmente biomédicas) es "
"[**AICSImageIO**](https://github.com/AllenCellModeling/aicsimageio). Se "
"trata de una biblioteca de Python realmente útil que estandariza la lectura "
"y escritura de múltiples formatos de archivo - y, dependiendo de cómo esté "
"instalada, puede incluso acceder a muchos más formatos raros de archivo  con"
" la ayuda de [Bio-Formats](http://www.openmicroscopy.org/bio-formats/)."

#: ../../../chapters/1-concepts/5-pixel_size/python.md:106
msgid ""
"Although it's possible to use a version of `imread` with AICSImageIO, it's "
"worth learning the alternative way of doing things by creating an "
"`AICSImage` object. This provides us with a way to access pixels and lots of"
" other useful things whenever we need them."
msgstr ""
"Aunque es posible utilizar una versión de `imread` con AICSImageIO, vale la "
"pena aprender la forma alternativa de hacer las cosas creando un objeto "
"`AICSImage`. Esto nos proporciona una forma de acceder a los píxeles y a "
"muchas otras cosas útiles siempre que las necesitemos."

#: ../../../chapters/1-concepts/5-pixel_size/python.md:122
msgid ""
"From this, we can immediately see the attribute that will provide us with "
"pixel sizes directly."
msgstr ""
"A partir de aquí, podemos ver inmediatamente el atributo que nos "
"proporcionará directamente el tamaño de los píxeles."

#: ../../../chapters/1-concepts/5-pixel_size/python.md:128
msgid ""
"One perhaps non-obvious thing to know when using AICSImageIO is that the "
"`AICSImage` isn't a regular NumPy array of the kind that `imageio.imread` "
"would return. Rather, if you want that, you need to request the data."
msgstr ""
"Una cosa quizás no obvia que hay que saber al usar AICSImageIO es que "
"`AICSImage` no es un array NumPy normal del tipo que devolvería "
"`imageio.imread`. Más bien, si quieres eso, tienes que solicitar los datos."

#: ../../../chapters/1-concepts/5-pixel_size/python.md:131
msgid ""
"Using this knowledge, we can check that we have the same mean pixel value "
"for both - as a quick way to ascertain that the actual pixel values are "
"likely to match."
msgstr ""
"A partir de este conocimiento, podemos comprobar que tenemos el mismo valor "
"medio de píxel para ambos, como una forma rápida de asegurarnos de que los "
"valores reales de píxel probablemente coincidan."

#: ../../../chapters/1-concepts/5-pixel_size/python.md:138
msgid "Dimensions"
msgstr "Dimensiones"

#: ../../../chapters/1-concepts/5-pixel_size/python.md:140
msgid "Array shapes and dimensions"
msgstr "Formas y dimensiones de las matrices"

#: ../../../chapters/1-concepts/5-pixel_size/python.md:142
msgid ""
"We've seen how two different libraries can enable us to read the same pixel "
"values as NumPy arrays and extract pixel size information."
msgstr ""
"Hemos visto cómo dos librerías diferentes pueden permitirnos leer los mismos"
" valores de píxeles como matrices NumPy y extraer información sobre el "
"tamaño de los píxeles."

#: ../../../chapters/1-concepts/5-pixel_size/python.md:144
msgid ""
"We might well expect that the NumPy arrays representing the pixel values are"
" the same, but in fact we can't count on that."
msgstr ""
"Podríamos esperar que las matrices NumPy que representan los valores de los "
"píxeles fueran iguales, pero en realidad no podemos contar con ello."

#: ../../../chapters/1-concepts/5-pixel_size/python.md:146
msgid ""
"NumPy is incredibly flexible when it comes to handling multidimensional "
"arrays.  And while that flexibility can be really helpful, it can also "
"complicate things."
msgstr ""
"NumPy es increíblemente flexible cuando se trata de manejar matrices "
"multidimensionales.  Y aunque esa flexibilidad puede ser realmente útil, "
"también puede complicar las cosas."

#: ../../../chapters/1-concepts/5-pixel_size/python.md:149
msgid ""
"To see it in action, let's check the dimensions of the images we read using "
"imageio and AICSImageIO."
msgstr ""
"Para verlo en acción, comprobemos las dimensiones de las imágenes que leemos"
" utilizando imageio y AICSImageIO."

#: ../../../chapters/1-concepts/5-pixel_size/python.md:166
msgid ""
"We can see the number of pixels are the same, but there are some extra "
"'singleton' dimensions stuck into the results from AICSImageIO (i.e. with "
"length `1`)."
msgstr ""
"Podemos ver que el número de píxeles es el mismo, pero hay algunas "
"dimensiones 'unicas' adicionales metidas en los resultados de AICSImageIO "
"(es decir, con longitud `1`)."

#: ../../../chapters/1-concepts/5-pixel_size/python.md:168
msgid ""
"Fortunately, we can easily remove them with an `np.squeeze` - and end up "
"with the same arrays."
msgstr ""
"Afortunadamente, podemos eliminarlos fácilmente con un `np.squeeze` - y "
"acabar con las mismas matrices."

#: ../../../chapters/1-concepts/5-pixel_size/python.md:177
msgid ""
"So a natural question is: **why has AICSImageIO snuck in some extra "
"dimensions?**"
msgstr ""
"Así que una pregunta natural es: **¿Por qué AICSImageIO ha introducido "
"algunas dimensiones extra?"

#: ../../../chapters/1-concepts/5-pixel_size/python.md:179
msgid ""
"Before answering that, we should ask ourselves something else. **What "
"exactly do we _have_ along the dimension of length `5`?**"
msgstr ""
"Antes de responder a eso, deberíamos preguntarnos otra cosa. **¿Qué tenemos "
"exactamente a lo largo de la dimensión \"5\"?"

#: ../../../chapters/1-concepts/5-pixel_size/python.md:182
msgid "And this is where things aren't terribly clear with imageio."
msgstr "Y aquí es donde las cosas no están muy claras con Imageio."

#: ../../../chapters/1-concepts/5-pixel_size/python.md:184
msgid ""
"`5` *could* be the width of the image, height of the image, number of "
"channels, number of z-slices, or number of timepoints."
msgstr ""
"`5` *podría ser* la anchura de la imagen, la altura de la imagen, el número "
"de canales, el número de secciones z o el número de puntos temporales."

#: ../../../chapters/1-concepts/5-pixel_size/python.md:186
msgid ""
"Based upon our knowledge of images and the other dimensions, we'd be "
"justified in expecting that the `5` doesn't correspond to the image width or"
" height - `512` seems more likely for those - so it's probably one of the "
"others."
msgstr ""
"Basándonos en nuestro conocimiento de las imágenes y de las otras "
"dimensiones, podemos suponer que el \"5\" no corresponde a la anchura ni a "
"la altura de la imagen (el \"512\" parece más probable), por lo que "
"probablemente sea una de las otras."

#: ../../../chapters/1-concepts/5-pixel_size/python.md:188
msgid ""
"But the problem is that **we have no way of knowing** without further "
"information. If we don't have some external source to tell us, we need to "
"poke around the metadata or look at the contents to figure out the answer."
msgstr ""
"Pero el problema es que **no tenemos forma de saberlo** sin más información."
" Si no tenemos una fuente externa que nos lo diga, tenemos que hurgar en los"
" metadatos o mirar el contenido para averiguar la respuesta."

#: ../../../chapters/1-concepts/5-pixel_size/python.md:201
msgid ""
"To me, that looks very much like we have 5 different channels. I'm making "
"some assumptions there... but they seem pretty safe assumptions."
msgstr ""
"A mí me parece que tenemos 5 canales diferentes. Estoy haciendo algunas "
"suposiciones... pero parecen suposiciones bastante seguras."

#: ../../../chapters/1-concepts/5-pixel_size/python.md:204
msgid "However AICSImageIO removes this ambiguity in a couple of ways."
msgstr ""
"Sin embargo, AICSImageIO elimina esta ambigüedad de un par de maneras."

#: ../../../chapters/1-concepts/5-pixel_size/python.md:205
msgid ""
"You can expect `AICSImage` to return a 5D array, with the dimensions in a "
"consistent order: `TCZYX` (although there is at least one caveat in the next"
" section!)"
msgstr ""
"Puedes esperar que `AICSImage` devuelva un array 5D, con las dimensiones en "
"un orden consistente: TCZYX` (aunque hay al menos una advertencia en la "
"siguiente sección)."

#: ../../../chapters/1-concepts/5-pixel_size/python.md:206
msgid "You can easily query the dimensions and order to be sure"
msgstr ""
"Puede consultar fácilmente las dimensiones y el orden para estar seguro"

#: ../../../chapters/1-concepts/5-pixel_size/python.md:215
msgid "Where are my channels?!?"
msgstr "¿Dónde están mis canales?"

#: ../../../chapters/1-concepts/5-pixel_size/python.md:217
msgid ""
"We've seen above that imageio can return a 5-channel image with the channels"
" first. Our question here is: does it always do that?"
msgstr ""
"Hemos visto anteriormente que imageio puede devolver una imagen de 5 canales"
" con los canales en primer lugar. Nuestra pregunta aquí es: ¿lo hace "
"siempre?"

#: ../../../chapters/1-concepts/5-pixel_size/python.md:220
msgid ""
"The answer, alas, is no. The location of the channels dimensions is "
"painfully uncertain in Python, and often different tools expect it to be in "
"different places."
msgstr ""
"La respuesta, por desgracia, es no. La ubicación de las dimensiones de los "
"canales es dolorosamente incierta en Python, y a menudo diferentes "
"herramientas esperan que esté en diferentes lugares."

#: ../../../chapters/1-concepts/5-pixel_size/python.md:223
msgid "Or sometimes the *same* tool might put it in a different place."
msgstr "O a veces la *misma* herramienta puede ponerlo en un lugar diferente."

#: ../../../chapters/1-concepts/5-pixel_size/python.md:225
msgid "To see that in action, let's read a simple RGB image with imageio."
msgstr "Para verlo en acción, vamos a leer una simple imagen RGB con imageio."

#: ../../../chapters/1-concepts/5-pixel_size/python.md:233
msgid ""
"An RGB image has 3 channels - red, green and blue - but it seems that "
"suddenly we have the channels dimension last."
msgstr ""
"Una imagen RGB tiene 3 canales - rojo, verde y azul - pero parece que de "
"repente tenemos la dimensión de los canales en último lugar."

#: ../../../chapters/1-concepts/5-pixel_size/python.md:235
msgid "Why?"
msgstr "¿Por qué?"

#: ../../../chapters/1-concepts/5-pixel_size/python.md:237
msgid ""
"I don't have a very satisfying explanation, except to say that for RGB "
"that's often what you want because matplotlib expects the channels to be "
"last, and we often use matplotlib to show images."
msgstr ""
"No tengo una explicación muy satisfactoria, excepto decir que para RGB eso "
"es a menudo lo que quieres porque matplotlib espera que los canales sean los"
" últimos, y a menudo usamos matplotlib para mostrar imágenes."

#: ../../../chapters/1-concepts/5-pixel_size/python.md:249
msgid ""
"It's not *always* what you want though, and if you get enough deep learning "
"then you'll find the 'channels-first' or 'channels-last' question coming up "
"often."
msgstr ""
"Sin embargo, no es *siempre* lo que quieres, y si consigues un aprendizaje "
"profundo suficiente, te encontrarás a menudo con la pregunta \"canales "
"primero\" o \"canales después\"."

#: ../../../chapters/1-concepts/5-pixel_size/python.md:251
msgid ""
"With that in mind, we can use NumPy to shift from so-called 'channels-last' "
"to 'channels-first' - but matplotlib won't like that very much."
msgstr ""
"Con esto en mente, podemos usar NumPy para cambiar de los llamados 'canales-"
"últimos' a 'canales-primeros' - pero a matplotlib no le gustará mucho."

#: ../../../chapters/1-concepts/5-pixel_size/python.md:266
msgid ""
"So imageio might get channels at the start or the end. For RGB, it seems to "
"prefer the end."
msgstr ""
"Así que imageio puede obtener canales al principio o al final. Para RGB, "
"parece preferir el final."

#: ../../../chapters/1-concepts/5-pixel_size/python.md:269
msgid "What does AICSImageIO do?"
msgstr "¿Qué hace AICSImageIO?"

#: ../../../chapters/1-concepts/5-pixel_size/python.md:271
msgid ""
"Since I said AICSImageIO is consistent, I'd like to say it puts the channels"
" in the same place for the RGB and 5-channel image... but no. It also treats"
" RGB as a special case."
msgstr ""
"Ya que dije que AICSImageIO es consistente, me gustaría decir que pone los "
"canales en el mismo lugar para la imagen RGB y la de 5 canales... pero no. "
"También trata RGB como un caso especial."

#: ../../../chapters/1-concepts/5-pixel_size/python.md:281
msgid ""
"It's a little hard to find, but the AICSImageIO documentation mentions that "
"[you can expect 5 dimensions for non-RGB images, but RGB images have 6 "
"dimensions](https://allencellmodeling.github.io/aicsimageio/aicsimageio.readers.html#aicsimageio.readers.bioformats_reader.BioFile.to_numpy)"
" - where the sixth is called `S` for `Samples`."
msgstr ""
"Es un poco difícil de encontrar, pero la documentación de AICSImageIO "
"menciona que [se pueden esperar 5 dimensiones para imágenes no RGB, pero las"
" imágenes RGB tienen 6 "
"dimensiones](https://allencellmodeling.github.io/aicsimageio/aicsimageio.readers.html#aicsimageio.readers.bioformats_reader.BioFile.to_numpy)"
" - donde la sexta se llama `S` para `Samples`."

#: ../../../chapters/1-concepts/5-pixel_size/python.md:283
msgid ""
"The good thing is that, assuming you don't have anything else going on with "
"the first 3 dimensions - i.e. they are just `(1, 1, 1)` - a simple "
"`np.squeeze` is enough to convert the pixel array into a matplotlib-friendly"
" channels-last RGB format."
msgstr ""
"Lo bueno es que, suponiendo que no tienes nada más en marcha con las 3 "
"primeras dimensiones - es decir, son sólo `(1, 1, 1)` - un simple "
"`np.squeeze` es suficiente para convertir la matriz de píxeles en un formato"
" RGB de último canal, que sea amigable con matplotlib."

#: ../../../chapters/1-concepts/5-pixel_size/python.md:287
msgid "More dimensions"
msgstr "Más dimensiones"

#: ../../../chapters/1-concepts/5-pixel_size/python.md:289
msgid ""
"We'll end this section by looking at an image with 2 channels and 25 "
"z-slices."
msgstr ""
"Terminaremos esta sección analizando una imagen con 2 canales y 25 cortes z."

#: ../../../chapters/1-concepts/5-pixel_size/python.md:291
msgid ""
"Since you now know how to explore the dimensions in detail, I'll use my "
"`load_image` helper function for convenience... which returns a NumPy array "
"that's pre-squeezed to remove any singleton dimensions."
msgstr ""
"Ya que ahora sabes cómo explorar las dimensiones a detalle, usaré mi función"
" de ayuda `load_image` por conveniencia... que devuelve un array NumPy que "
"está pre-exprimido para eliminar cualquier dimensión única (singleton)."

#: ../../../chapters/1-concepts/5-pixel_size/python.md:298
msgid ""
"Since we already considered how to view multichannel images in the last "
"chapter, let's extract a single channel here."
msgstr ""
"Como ya hemos visto cómo visualizar imágenes multicanal en el último "
"capítulo, vamos a extraer aquí un solo canal."

#: ../../../chapters/1-concepts/5-pixel_size/python.md:307
msgid ""
"At this point, NumPy becomes quite fun - because it is *so easy* to do stuff"
" along different dimensions."
msgstr ""
"En este punto, NumPy se vuelve bastante divertido - porque es *tan fácil* "
"hacer cosas a lo largo de diferentes dimensiones."

#: ../../../chapters/1-concepts/5-pixel_size/python.md:309
msgid "For example, we can rapidly generate different z-projections."
msgstr "Por ejemplo, podemos generar rápidamente diferentes proyecciones z."

#: ../../../chapters/1-concepts/5-pixel_size/python.md:337
msgid ""
"But we're not limited to projecting along z - we can just switch the `axis` "
"value and project along some other dimension."
msgstr ""
"Pero no estamos limitados a proyectar a lo largo de z - podemos simplemente "
"cambiar el valor del `eje` y proyectar a lo largo de alguna otra dimensión."

#: ../../../chapters/1-concepts/5-pixel_size/python.md:339
msgid ""
"Note that this won't do any correction for differences in pixel size in xy "
"vs. z. With only 25 z-slices, these projections look extremely squashed."
msgstr ""
"Ten en cuenta que esto no hará ninguna corrección para las diferencias en el"
" tamaño de píxel en xy vs z. Con sólo 25 secciones z, estas proyecciones se "
"ven muy aplastadas."

#: ../../../chapters/1-concepts/5-pixel_size/python.md:367
msgid ""
"And we can also slice wherever we like as well, to obtain orthogonal views."
msgstr ""
"Y también podemos cortar donde queramos para obtener vistas ortogonales."
