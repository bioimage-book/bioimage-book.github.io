# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022-2024
# This file is distributed under the same license as the bioimage-book package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Beth Cimini, 2024
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: bioimage-book\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-05 16:49+0000\n"
"PO-Revision-Date: 2024-02-05 21:49+0000\n"
"Last-Translator: Beth Cimini, 2024\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/center-for-open-bioimage-analysis/teams/169123/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % 1000000 == 0 ? 1 : 2;\n"

#: ../../../chapters/1-concepts/3-bit_depths/imagej.md:16
msgid "ImageJ: Types & bit-depths"
msgstr "ImageJ: Tipos e profundidade de bits"

#: ../../../chapters/1-concepts/3-bit_depths/imagej.md:36
msgid "Introduction"
msgstr "Introdução"

#: ../../../chapters/1-concepts/3-bit_depths/imagej.md:38
msgid ""
"The bit-depth and type of an image is determined before it is opened in "
"ImageJ. If the data is clipped, it's already wrong before we begin -- and no"
" amount of ImageJ wizardry will get the information back."
msgstr ""
"A profundidade de bits e o tipo de uma imagem são determinados antes de ela "
"ser aberta no ImageJ. Se os dados forem cortados, eles já estarão errados "
"antes de começarmos - e nenhuma magia do ImageJ recuperará as informações."

#: ../../../chapters/1-concepts/3-bit_depths/imagej.md:42
msgid "Here, we will explore how to:"
msgstr "Aqui, exploraremos como:"

#: ../../../chapters/1-concepts/3-bit_depths/imagej.md:44
msgid "Check the bit-depth and type"
msgstr "Verifique a profundidade de bits e o tipo"

#: ../../../chapters/1-concepts/3-bit_depths/imagej.md:45
msgid "Diagnose when clipping may have occurred"
msgstr "Diagnosticar quando o recorte pode ter ocorrido"

#: ../../../chapters/1-concepts/3-bit_depths/imagej.md:46
msgid "Convert the bit-depth and height -- carefully -- if needed"
msgstr ""
"Converta a profundidade e a altura dos bits - com cuidado - se necessário"

#: ../../../chapters/1-concepts/3-bit_depths/imagej.md:49
msgid "Checking the bit-depth & type"
msgstr "Verificando a profundidade e o tipo de bits"

#: ../../../chapters/1-concepts/3-bit_depths/imagej.md:51
msgid ""
"Bit-depth and type are related to one another: both are needed to convert "
"binary data into pixel values. ImageJ does not always make a careful "
"distinction between the two."
msgstr ""
"A profundidade de bits e o tipo estão relacionados entre si: ambos são "
"necessários para converter dados binários em valores de pixel. ImageJ nem "
"sempre faz uma distinção cuidadosa entre os dois."

#: ../../../chapters/1-concepts/3-bit_depths/imagej.md:54
msgid ""
"The full list of image types supported by ImageJ is found in the "
"{menuselection}`Image --> Type --> ` submenu. The top three entries are the "
"most important; they are"
msgstr ""
"A lista completa de tipos de imagens suportados pelo ImageJ é encontrada no "
"submenu {menuselection}`Image --> Type --> `. As três primeiras entradas são"
" as mais importantes; eles são"

#: ../../../chapters/1-concepts/3-bit_depths/imagej.md:56
msgid "**8-bit** -- unsigned integer"
msgstr "**8 bits** – número inteiro sem sinal"

#: ../../../chapters/1-concepts/3-bit_depths/imagej.md:57
msgid "**16-bit** -- unsigned integer"
msgstr "**16 bits** – número inteiro sem sinal"

#: ../../../chapters/1-concepts/3-bit_depths/imagej.md:58
msgid "**32-bit** -- floating point"
msgstr "**32 bits** – ponto flutuante"

#: ../../../chapters/1-concepts/3-bit_depths/imagej.md:60
msgid ""
"Although these look like bit-depths, they are listed as 'types'. But since "
"an 8-bit and 16-bit images in ImageJ are *always* unsigned integer, and "
"32-bit images are *always* floating point, there is no ambiguity."
msgstr ""
"Embora pareçam profundidades de bits, eles são listados como 'tipos'. Mas "
"como as imagens de 8 e 16 bits no ImageJ são *sempre* inteiros sem sinal e "
"as imagens de 32 bits são *sempre* ponto flutuante, não há ambigüidade."

#: ../../../chapters/1-concepts/3-bit_depths/imagej.md:63
msgid ""
"You can see the type of the current image by checking which item under "
"{menuselection}`Image --> Type` has a tick next to it. But you don't usually"
" have to; you can also see the information at the top of the image window."
msgstr ""
"Você pode ver o tipo da imagem atual verificando qual item em "
"{menuselection}`Imagem --> Tipo` tem uma marca ao lado. Mas geralmente não é"
" necessário; você também pode ver as informações na parte superior da janela"
" da imagem."

#: ../../../chapters/1-concepts/3-bit_depths/imagej.md:80
msgid ""
"The text at the top of each image window provides useful information. Here, "
"the image on the left is 8-bit and the image on the right is 16-bit."
msgstr ""
"O texto na parte superior de cada janela de imagem fornece informações "
"úteis. Aqui, a imagem à esquerda é de 8 bits e a imagem à direita é de 16 "
"bits."

#: ../../../chapters/1-concepts/3-bit_depths/imagej.md:84
msgid ""
"There are various other types listed under {menuselection}`Image --> Type`, "
"which all have an association with color. These are less different than they"
" first appear: an RGB image is really an 8-bit image with three channels "
"(corresponding to red, green and blue). We will explore this in "
"{ref}`chap_colors`."
msgstr ""
"Existem vários outros tipos listados em {menuselection}`Imagem --> Tipo`, "
"todos eles associados à cor. Eles são menos diferentes do que parecem à "
"primeira vista: uma imagem RGB é na verdade uma imagem de 8 bits com três "
"canais (correspondendo a vermelho, verde e azul). Exploraremos isso em "
"{ref}`chap_colors`."

#: ../../../chapters/1-concepts/3-bit_depths/imagej.md:89
msgid "Diagnosing problems"
msgstr "Diagnosticando problemas"

#: ../../../chapters/1-concepts/3-bit_depths/imagej.md:91
msgid ""
"The biggest problem associated with an image's bit-depth and type is "
"clipping. {menuselection}`Analyze --> Histogram` is the essential command "
"needed to diagnose if something is wrong -- just press {kbd}`H` to run it."
msgstr ""
"O maior problema associado à profundidade e ao tipo de bits de uma imagem é "
"o recorte. {menuselection}`Analyze --> Histogram` é o comando essencial "
"necessário para diagnosticar se algo está errado - basta pressionar {kbd}`H "
"`para executá-lo."

#: ../../../chapters/1-concepts/3-bit_depths/imagej.md:108
msgid "Two similar-looking images and their histograms: one clipped, one not."
msgstr ""
"Duas imagens de aparência semelhante e seus histogramas: uma cortada e outra"
" não."

#: ../../../chapters/1-concepts/3-bit_depths/imagej.md:111
msgid ""
"The main sign that an image was clipped is a big peak at either end of the "
"histogram. This can take some careful inspection to distinguish from the "
"black border that surrounds the histogram in ImageJ."
msgstr ""
"O principal sinal de que uma imagem foi cortada é um grande pico em cada "
"extremidade do histograma. Pode ser necessária uma inspeção cuidadosa para "
"distinguir da borda preta que circunda o histograma no ImageJ."

#: ../../../chapters/1-concepts/3-bit_depths/imagej.md:114
msgid ""
"If you know the bit-depth and type of the image, you can figure out the "
"range (e.g. 0-255 for an 8-bit unsigned integer image, 0-65,535 for 16-bit) "
"and usually that gives a good indication to where the peaks would be -- but "
"it isn't a perfect guide. Conceivably, we could have an image that was "
"clipped at some other value because it has been rescaled *after* clipping."
msgstr ""
"Se você conhece a profundidade de bits e o tipo da imagem, poderá descobrir "
"o intervalo (por exemplo, 0-255 para uma imagem inteira sem sinal de 8 bits,"
" 0-65.535 para 16 bits) e geralmente isso fornece uma boa indicação de onde "
"os picos seriam - mas não é um guia perfeito. É concebível que poderíamos "
"ter uma imagem que foi recortada com algum outro valor porque foi "
"redimensionada *após* o recorte."

#: ../../../chapters/1-concepts/3-bit_depths/imagej.md:0
#: ../../../chapters/1-concepts/3-bit_depths/imagej.md:0
msgid "Question"
msgstr "Pergunta"

#: ../../../chapters/1-concepts/3-bit_depths/imagej.md:121
msgid "Does the image below show signs of having been clipped?"
msgstr "A imagem abaixo mostra sinais de ter sido cortada?"

#: ../../../chapters/1-concepts/3-bit_depths/imagej.md:0
#: ../../../chapters/1-concepts/3-bit_depths/imagej.md:0
msgid "Answer"
msgstr "Responder"

#: ../../../chapters/1-concepts/3-bit_depths/imagej.md:130
msgid ""
"Yes! There is a small peak at the high end of the histogram, corresponding "
"to pixel values of 4095. This is itself a suspicious number because it would"
" be the maximum possible value in a 12-bit unsigned integer image (i.e. "
"2<sup>12</sup> - 1) -- so my guess is that was the bit-depth of the "
"acquisition device."
msgstr ""
"Sim! Há um pequeno pico na extremidade superior do histograma, "
"correspondendo a valores de pixel de 4095. Este é um número suspeito porque "
"seria o valor máximo possível em uma imagem inteira sem sinal de 12 bits (ou"
" seja, 2<sup>12</sup> - 1) - então meu palpite é que essa foi a profundidade"
" de bits do dispositivo de aquisição."

#: ../../../chapters/1-concepts/3-bit_depths/imagej.md:134
msgid ""
"Admittedly, the image is not *very badly* clipped. We could check the "
"proportion of pixels with that value, and use this to estimate whether it is"
" likely that the clipping will have a significant impact upon later "
"analysis. But it's better to avoid clipping altogether when possible."
msgstr ""
"É certo que a imagem não está *muito mal* cortada. Poderíamos verificar a "
"proporção de pixels com esse valor e usá-lo para estimar se é provável que o"
" recorte tenha um impacto significativo em análises posteriores. Mas é "
"melhor evitar o recorte quando possível."

#: ../../../chapters/1-concepts/3-bit_depths/imagej.md:142
msgid "Converting images"
msgstr "Convertendo imagens"

#: ../../../chapters/1-concepts/3-bit_depths/imagej.md:144
msgid ""
"There are three main scenarios when you might need to convert the type or "
"bit-depth of an image:"
msgstr ""
"Existem três cenários principais em que pode ser necessário converter o tipo"
" ou a profundidade de bits de uma imagem:"

#: ../../../chapters/1-concepts/3-bit_depths/imagej.md:146
msgid "**Reducing the file size**"
msgstr "**Reduzindo o tamanho do arquivo**"

#: ../../../chapters/1-concepts/3-bit_depths/imagej.md:147
msgid "**Converting to 8-bit to display the image in other software**"
msgstr "**Convertendo para 8 bits para exibir a imagem em outro software**"

#: ../../../chapters/1-concepts/3-bit_depths/imagej.md:148
msgid "Because 8-bit images are more common outside of science"
msgstr "Porque imagens de 8 bits são mais comuns fora da ciência"

#: ../../../chapters/1-concepts/3-bit_depths/imagej.md:149
msgid ""
"**Converting to floating-point before doing image processing operations**"
msgstr ""
"**Convertendo para ponto flutuante antes de realizar operações de "
"processamento de imagem**"

#: ../../../chapters/1-concepts/3-bit_depths/imagej.md:150
msgid ""
"Because (as we will see later in the book) these often require fractions and"
" negative numbers"
msgstr ""
"Porque (como veremos mais adiante neste livro) muitas vezes requerem frações"
" e números negativos"

#: ../../../chapters/1-concepts/3-bit_depths/imagej.md:152
msgid ""
"Note that *reversing* the effects of clipping isn't in the list: if an image"
" is clipped during acquisition, any later conversion won't help. The clipped"
" data is gone for good."
msgstr ""
"Observe que *reverter* os efeitos do recorte não está na lista: se uma "
"imagem for cortada durante a aquisição, qualquer conversão posterior não "
"ajudará. Os dados cortados desapareceram para sempre."

#: ../../../chapters/1-concepts/3-bit_depths/imagej.md:155
msgid ""
"However, you can still introduce clipping after acquisition by making ill-"
"advised conversions -- with all the unfortunate consequences of that. "
"Therefore it's important to know how ImageJ's type conversion works."
msgstr ""
"No entanto, você ainda pode introduzir recorte após aquisição fazendo "
"conversões imprudentes - com todas as consequências infelizes disso. "
"Portanto é importante saber como funciona a conversão de tipo do ImageJ."

#: ../../../chapters/1-concepts/3-bit_depths/imagej.md:159
msgid "Increasing the bit-depth"
msgstr "Aumentando a profundidade de bits"

#: ../../../chapters/1-concepts/3-bit_depths/imagej.md:161
msgid ""
"Let's start with the easy case: *increasing* the bit-depth of an image."
msgstr ""
"Vamos começar com o caso fácil: *aumentar* a profundidade de bits de uma "
"imagem."

#: ../../../chapters/1-concepts/3-bit_depths/imagej.md:163
msgid ""
"In principle, we can convert an image just by choosing the type we want from"
" the {menuselection}`Image --> Type -->` submenu."
msgstr ""
"Em princípio, podemos converter uma imagem apenas escolhendo o tipo que "
"queremos no submenu {menuselection}`Image --> Type -->`."

#: ../../../chapters/1-concepts/3-bit_depths/imagej.md:165
msgid ""
"In ImageJ, there are only really three bit-depths and associated types. This"
" means that the only conversions that can increase the bit-depth are:"
msgstr ""
"No ImageJ, existem apenas três profundidades de bits e tipos associados. "
"Isso significa que as únicas conversões que podem aumentar a profundidade de"
" bits são:"

#: ../../../chapters/1-concepts/3-bit_depths/imagej.md:167
msgid "8-bit (unsigned integer) &rarr; 16-bit (unsigned integer)"
msgstr ""
"8 bits (número inteiro sem sinal) &rarr; 16 bits (número inteiro sem sinal)"

#: ../../../chapters/1-concepts/3-bit_depths/imagej.md:168
msgid "8-bit (unsigned integer) &rarr; 32-bit (floating point)"
msgstr "8 bits (número inteiro sem sinal) &rarr; 32 bits (ponto flutuante)"

#: ../../../chapters/1-concepts/3-bit_depths/imagej.md:169
msgid "16-bit (unsigned integer) &rarr; 32-bit (floating point)"
msgstr "16 bits (número inteiro sem sinal) &rarr; 32 bits (ponto flutuante)"

#: ../../../chapters/1-concepts/3-bit_depths/imagej.md:171
msgid "Fortunately,"
msgstr "Felizmente,"

#: ../../../chapters/1-concepts/3-bit_depths/imagej.md:172
msgid ""
"any 8-bit unsigned integer value can be represented in a 16-bit unsigned "
"integer image"
msgstr ""
"qualquer valor inteiro sem sinal de 8 bits pode ser representado em uma "
"imagem inteira sem sinal de 16 bits"

#: ../../../chapters/1-concepts/3-bit_depths/imagej.md:173
msgid ""
"any 16-bit unsigned integer value can be represented in a 32-bit unsigned "
"floating point image"
msgstr ""
"qualquer valor inteiro não assinado de 16 bits pode ser representado em uma "
"imagem de ponto flutuante não assinado de 32 bits"

#: ../../../chapters/1-concepts/3-bit_depths/imagej.md:175
msgid ""
"Consequently, increasing the bit-depth *should* always be safe. That being "
"said..."
msgstr ""
"Conseqüentemente, aumentar a profundidade de bits *deve* ser sempre seguro. "
"Dito isto..."

#: ../../../chapters/1-concepts/3-bit_depths/imagej.md:178
msgid "Always prepare for software to surprise us!"
msgstr "Prepare-se sempre para que o software nos surpreenda!"

#: ../../../chapters/1-concepts/3-bit_depths/imagej.md:181
msgid ""
"We shouldn't be complacent about image conversions, even if we think they "
"*should* be ok. It's so easy to measure images (press {kbd}`M`), we should "
"always check before and after conversion to make sure the summary "
"measurements are unchanged."
msgstr ""
"Não devemos ser complacentes com as conversões de imagens, mesmo que "
"pensemos que elas *deveriam* estar bem. É tão fácil medir imagens (pressione"
" {kbd}`M`), devemos sempre verificar antes e depois da conversão para ter "
"certeza de que as medidas resumidas permanecem inalteradas."

#: ../../../chapters/1-concepts/3-bit_depths/imagej.md:186
msgid "Reducing the bit-depth"
msgstr "Reduzindo a profundidade de bits"

#: ../../../chapters/1-concepts/3-bit_depths/imagej.md:188
msgid ""
"Reducing the bit-depth is where the biggest dangers lurk. Then not all "
"values from a higher bit-depth image fit into an image with a lower bit-"
"depth."
msgstr ""
"Reduzir a profundidade de bits é onde se escondem os maiores perigos. Assim,"
" nem todos os valores de uma imagem com profundidade de bits mais alta cabem"
" em uma imagem com profundidade de bits mais baixa."

#: ../../../chapters/1-concepts/3-bit_depths/imagej.md:191
msgid ""
"The process is the same: choose the type you want from the "
"{menuselection}`Image --> Type -->` submenu."
msgstr ""
"O processo é o mesmo: escolha o tipo desejado no submenu "
"{menuselection}`Imagem --> Tipo -->`."

#: ../../../chapters/1-concepts/3-bit_depths/imagej.md:193
msgid ""
"But what happens next depends upon whether the option {guilabel}`Scale When "
"Converting` under {menuselection}`Edit --> Options --> Conversions...` is "
"checked or not."
msgstr ""
"Mas o que acontece a seguir depende se a opção {guilabel}`Escala ao "
"converter` em {menuselection}`Editar --> Opções --> Conversions...` está "
"marcado ou não."

#: ../../../chapters/1-concepts/3-bit_depths/imagej.md:195
msgid ""
"{guilabel}`Scale When Converting` **is _not_ checked:** pixels are simply "
"given the closest valid value within the new bit depth, i.e. there is "
"clipping and rounding as needed."
msgstr ""
"{guilabel}`Escala ao converter` **_não_ está marcada:** os pixels recebem "
"simplesmente o valor válido mais próximo dentro da nova profundidade de "
"bits, ou seja, há recorte e arredondamento conforme necessário."

#: ../../../chapters/1-concepts/3-bit_depths/imagej.md:196
msgid ""
"Example: If you convert an image to 8-bit, then no data will be lost *only* "
"if every pixel value before conversion is an integer in the range 0--255. "
"Every other value will be rounded or clipped."
msgstr ""
"Exemplo: Se você converter uma imagem para 8 bits, nenhum dado será perdido "
"*somente* se cada valor de pixel antes da conversão for um número inteiro no"
" intervalo de 0 a 255. Todos os outros valores serão arredondados ou "
"cortados."

#: ../../../chapters/1-concepts/3-bit_depths/imagej.md:197
msgid ""
"{guilabel}`Scale When Converting`**_is_ checked:** a constant is added or "
"subtracted, then pixels are further divided by another constant before being"
" assigned to the nearest valid value within the new bit depth. Only *then* "
"is clipping or rounding applied if it is still needed."
msgstr ""
"{guilabel}`Escala ao converter`**_está_ marcada:** uma constante é "
"adicionada ou subtraída, então os pixels são divididos por outra constante "
"antes de serem atribuídos ao valor válido mais próximo dentro do nova "
"profundidade de bits. Somente *então* o recorte ou arredondamento é aplicado"
" se ainda for necessário."

#: ../../../chapters/1-concepts/3-bit_depths/imagej.md:199
msgid ""
"{guilabel}`Scale When Converting` is on by default and, as suggested by "
"{numref}`fig-bits_clipping`, is usually the best option. The question then "
"is where the constants come from to perform the rescaling."
msgstr ""
"{guilabel}`Escala ao converter` está ativado por padrão e, como sugerido por"
" {numref}`fig-bits_clipping`, geralmente é o melhor opção. A questão então é"
" de onde vêm as constantes para realizar o reescalonamento."

#: ../../../chapters/1-concepts/3-bit_depths/imagej.md:202
msgid ""
"Perhaps surprisingly, they are determined from the {guilabel}`Minimum` and "
"{guilabel}`Maximum` in the current *Brightness/Contrast...* settings: the "
"*Minimum* is subtracted, and the result is divided by *Maximum* - *Minimum*."
" Any pixel value that was lower than *Minimum* or higher than *Maximum* ends"
" up being clipped. Consequently, **converting to a lower bit-depth with "
"scaling can lead to different results depending upon what the brightness and"
" contrast settings were**."
msgstr ""
"Talvez surpreendentemente, eles são determinados a partir do "
"{guilabel}`Mínimo` e {guilabel}`Máximo` no *Brilho/Contraste atual. .* "
"configurações: o *Mínimo* é subtraído e o resultado é dividido por *Máximo* "
"- *Mínimo*. Qualquer valor de pixel inferior a *Mínimo* ou superior a "
"*Máximo* acaba sendo cortado. Conseqüentemente, **converter para uma "
"profundidade de bits mais baixa com escala pode levar a resultados "
"diferentes dependendo das configurações de brilho e contraste**."

#: ../../../chapters/1-concepts/3-bit_depths/imagej.md:206
msgid ""
"This means that, ideally, we would use a minimum value that is equal to the "
"minimum pixel value in the image, and a maximum value equal to the maximum "
"pixel value. Fortunately, there is an easy way to achieve this:"
msgstr ""
"Isso significa que, idealmente, usaríamos um valor mínimo igual ao valor "
"mínimo de pixel da imagem e um valor máximo igual ao valor máximo de pixel. "
"Felizmente, existe uma maneira fácil de conseguir isso:"

#: ../../../chapters/1-concepts/3-bit_depths/imagej.md:209
msgid "Reset the Brightness/Contrast range before reducing the bit-depth"
msgstr ""
"Redefina a faixa de brilho/contraste antes de reduzir a profundidade de bits"

#: ../../../chapters/1-concepts/3-bit_depths/imagej.md:212
msgid ""
"If you **really** need to reduce the bit-depth of an image in ImageJ, you "
"should usually open {menuselection}`Image --> Adjust --> "
"Brightness/Contrast...` ({kbd}`Shift+C`) and press the {guilabel}`Reset` "
"button first, to minimize the data lost to clipping or rounding."
msgstr ""
"Se você **realmente** precisa reduzir a profundidade de bits de uma imagem "
"no ImageJ, normalmente você deve abrir {menuselection}`Imagem --> Ajustar "
"--> Brilho/Contraste. ..` ({kbd}`Shift+C`) e pressione o botão "
"{guilabel}`Reset` primeiro, para minimizar a perda de dados para recorte ou "
"arredondamento."

#: ../../../chapters/1-concepts/3-bit_depths/imagej.md:219
msgid ""
"Why is scaling usually a good thing when reducing the bit-depth, and why is "
"a constant usually subtracted before applying this scaling?"
msgstr ""
"Por que o dimensionamento geralmente é uma coisa boa ao reduzir a "
"profundidade de bits e por que uma constante geralmente é subtraída antes de"
" aplicar esse dimensionamento?"

#: ../../../chapters/1-concepts/3-bit_depths/imagej.md:221
msgid ""
"**Hint:** As an example, consider how a 16-bit image containing values in "
"the range 4000–5000 might be converted to 8-bit first without scaling, and "
"then alternatively by scaling with or without the initial constant "
"subtraction. What constants for subtraction and division would usually "
"minimize the amount of information lost when converting to 8-bit image, "
"limiting the errors to rounding only and not clipping?"
msgstr ""
"**Dica:** Como exemplo, considere como uma imagem de 16 bits contendo "
"valores no intervalo de 4.000 a 5.000 pode ser convertida para 8 bits "
"primeiro sem escala e, em seguida, alternativamente, escalando com ou sem a "
"subtração constante inicial. Quais constantes para subtração e divisão "
"normalmente minimizariam a quantidade de informações perdidas na conversão "
"para uma imagem de 8 bits, limitando os erros apenas ao arredondamento e não"
" ao recorte?"

#: ../../../chapters/1-concepts/3-bit_depths/imagej.md:226
msgid ""
"In the example given, converting to 8-bit without any scaling would result "
"in all pixels simply becoming 255: all useful information in the image would"
" be lost."
msgstr ""
"No exemplo dado, a conversão para 8 bits sem qualquer escala resultaria em "
"todos os pixels simplesmente se tornarem 255: todas as informações úteis na "
"imagem seriam perdidas."

#: ../../../chapters/1-concepts/3-bit_depths/imagej.md:228
msgid ""
"With scaling but without subtraction, it would make sense to divide all "
"pixel values by the maximum in the image divided by the maximum in the new "
"bit depth, i.e. by 5000/255. This would then lead to an image in which "
"pixels fall into the range 204–255. Much information has clearly been lost: "
"1000 potentially different values have now been squeezed into 52."
msgstr ""
"Com dimensionamento, mas sem subtração, faria sentido dividir todos os "
"valores de pixels pelo máximo na imagem dividido pelo máximo na nova "
"profundidade de bits, ou seja, por 5000/255. Isso levaria então a uma imagem"
" na qual os pixels estariam no intervalo 204–255. Muita informação foi "
"claramente perdida: 1000 valores potencialmente diferentes foram agora "
"espremidos em 52."

#: ../../../chapters/1-concepts/3-bit_depths/imagej.md:231
msgid ""
"However, if we first subtract the smallest of our 16-bit values (i.e. 4000),"
" our initial range becomes 0–1000. Divide then by 1000/255 and the new "
"values become scaled across the full range of an 8-bit image, i.e. 0–255. We"
" have still lost information – but considerably less than if we had not "
"subtracted the constant first."
msgstr ""
"No entanto, se primeiro subtrairmos o menor dos nossos valores de 16 bits "
"(ou seja, 4.000), nosso intervalo inicial se tornará 0–1.000. Divida então "
"por 1000/255 e os novos valores serão dimensionados em toda a faixa de uma "
"imagem de 8 bits, ou seja, 0–255. Ainda perdemos informação – mas "
"consideravelmente menos do que se não tivéssemos subtraído a constante "
"primeiro."

#: ../../../chapters/1-concepts/3-bit_depths/imagej.md:0
msgid "Practical"
msgstr "Prático"

#: ../../../chapters/1-concepts/3-bit_depths/imagej.md:242
msgid ""
"Make sure that the {guilabel}`Scale When Converting` option is turned on (it"
" should be by default). Then using a suitable 8-bit sample image, e.g. "
"{menuselection}`File --> Open Samples --> Boats`, explore the effects of "
"brightness/contrast settings when increasing or decreasing bit-depths."
msgstr ""
"Certifique-se de que a opção {guilabel}`Escala ao converter` esteja ativada "
"(deve estar por padrão). Em seguida, usando uma imagem de amostra adequada "
"de 8 bits, por ex. {menuselection}`Arquivo --> Abrir amostras --> Barcos`, "
"explore os efeitos das configurações de brilho/contraste ao aumentar ou "
"diminuir a profundidade de bits."

#: ../../../chapters/1-concepts/3-bit_depths/imagej.md:245
msgid ""
"Can you destroy the image by simply 1) increasing the bit-depth, and the "
"then 2) decreasing the bit-depth to its original value?"
msgstr ""
"Você pode destruir a imagem simplesmente 1) aumentando a profundidade de "
"bits e depois 2) diminuindo a profundidade de bits para seu valor original?"

#: ../../../chapters/1-concepts/3-bit_depths/imagej.md:247
msgid ""
"[![launch ImageJ.JS](https://ij.imjoy.io/assets/badge/open-in-imagej-js-"
"badge.svg)](https://ij.imjoy.io/?run=https://gist.github.com/petebankhead/6f9f451fdc0116197501ae504a57d5e7)"
msgstr ""
"[![iniciar ImageJ.JS](https://ij.imjoy.io/assets/badge/open-in-imagej-js-"
"badge.svg)](https://ij.imjoy.io/?run= "
"https://gist.github.com/petebankhead/6f9f451fdc0116197501ae504a57d5e7)"

#: ../../../chapters/1-concepts/3-bit_depths/imagej.md:247
msgid "launch ImageJ.JS"
msgstr "iniciar ImageJ.JS"

#: ../../../chapters/1-concepts/3-bit_depths/imagej.md:0
msgid "Solution"
msgstr "Solução"

#: ../../../chapters/1-concepts/3-bit_depths/imagej.md:251
msgid ""
"It's generally a good idea to choose {guilabel}`Reset` in the "
"{menuselection}`Brightness/Contrast...` window before reducing any bit-"
"depths for 2D images (see {ref}`chap_multidimensional_processing` to read "
"about special considerations related to *z*-stacks or time series)."
msgstr ""
"Geralmente é uma boa ideia escolher {guilabel}`Reset` na janela "
"{menuselection}`Brilho/Contraste...` antes de reduzir qualquer profundidades"
" de bits para imagens 2D (consulte {ref}`chap_multidimensional_processing` "
"para ler sobre considerações especiais relacionadas a pilhas *z* ou séries "
"temporais)."

#: ../../../chapters/1-concepts/3-bit_depths/imagej.md:253
msgid ""
"You can destroy an image by increasing its bit-depth, adjusting the "
"brightness/contrast and then decreasing the bit-depth to the original one "
"again. This may seem weird, because clearly the final bit-depth is *capable*"
" of storing all the original pixel values. But ImageJ does not know this and"
" does not check, so it will simply do its normal bit-depth-reducing "
"conversion based on contrast settings."
msgstr ""
"Você pode destruir uma imagem aumentando sua profundidade de bits, ajustando"
" o brilho/contraste e diminuindo a profundidade de bits para a original "
"novamente. Isto pode parecer estranho, porque claramente a profundidade de "
"bits final é *capaz* de armazenar todos os valores de pixel originais. Mas o"
" ImageJ não sabe disso e não verifica, então ele simplesmente fará sua "
"conversão normal de redução de profundidade de bits com base nas "
"configurações de contraste."
