# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022-2024
# This file is distributed under the same license as the bioimage-book package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Beth Cimini, 2024
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: bioimage-book\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-05 16:49+0000\n"
"PO-Revision-Date: 2024-02-05 21:49+0000\n"
"Last-Translator: Beth Cimini, 2024\n"
"Language-Team: German (https://app.transifex.com/center-for-open-bioimage-analysis/teams/169123/de/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: de\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../../chapters/1-concepts/3-bit_depths/python.md:15
msgid "Python: Types & bit-depths"
msgstr "Python: Typen und Bit-Tiefen"

#: ../../../chapters/1-concepts/3-bit_depths/python.md:17
msgid ""
"In this section, we will explore how bit-depths and image types are "
"represented in Python. We'll look in particular at where things can go wrong"
" when converting between bit-depths, and how to apply the tricks from "
"previous chapters to identify problems."
msgstr ""
"In diesem Abschnitt werden wir untersuchen, wie Bittiefen und Bildtypen in "
"Python dargestellt werden. Wir schauen uns insbesondere an, was bei der "
"Konvertierung zwischen Bittiefen schiefgehen kann und wie man die Tricks aus"
" den vorherigen Kapiteln anwendet, um Probleme zu erkennen."

#: ../../../chapters/1-concepts/3-bit_depths/python.md:30
msgid "Bit-depths and dtype"
msgstr "Bit-Tiefen und dtype"

#: ../../../chapters/1-concepts/3-bit_depths/python.md:32
msgid ""
"The bit-depth of a **NumPy array** is encoded in its **data type** - or "
"**dtype** for short."
msgstr ""
"Die Bit-Tiefe eines **NumPy-Arrays** ist in seinem **Datentyp** - oder kurz "
"**dtype** - kodiert."

#: ../../../chapters/1-concepts/3-bit_depths/python.md:34
msgid ""
"ImageJ is focussed on on 8-bit and 16-bit unsigned integer images, as well "
"as 32-bit floating point images."
msgstr ""
"ImageJ konzentriert sich auf 8-Bit- und 16-Bit-Ganzzahlbilder ohne "
"Vorzeichen sowie 32-Bit-Fließkommabilder."

#: ../../../chapters/1-concepts/3-bit_depths/python.md:36
msgid ""
"NumPy, on the other hand, offers a much wider range of data types. The code "
"for a Numpy dtype isn't hard to crack, with a `uint` standing for 'unsigned "
"integer' and `float` for floating-point."
msgstr ""
"NumPy hingegen bietet eine viel breitere Palette von Datentypen. Der Code "
"für einen Numpy-DType ist nicht schwer zu knacken: \"uint\" steht für "
"\"unsigned integer\" (Ganzzahl ohne Vorzeichen) und \"float\" für "
"Fließkommazahlen."

#: ../../../chapters/1-concepts/3-bit_depths/python.md:0
msgid "Type"
msgstr "Typ"

#: ../../../chapters/1-concepts/3-bit_depths/python.md:0
msgid "Bit-depth"
msgstr "Bit-Tiefe"

#: ../../../chapters/1-concepts/3-bit_depths/python.md:0
msgid "dtype"
msgstr "dtype"

#: ../../../chapters/1-concepts/3-bit_depths/python.md:0
#: ../../../chapters/1-concepts/3-bit_depths/python.md:0
#: ../../../chapters/1-concepts/3-bit_depths/python.md:0
msgid "Unsigned integer"
msgstr "Ganzzahl ohne Vorzeichen"

#: ../../../chapters/1-concepts/3-bit_depths/python.md:0
#: ../../../chapters/1-concepts/3-bit_depths/python.md:0
msgid "8"
msgstr "8"

#: ../../../chapters/1-concepts/3-bit_depths/python.md:0
msgid "`uint8`"
msgstr "`uint8`"

#: ../../../chapters/1-concepts/3-bit_depths/python.md:0
#: ../../../chapters/1-concepts/3-bit_depths/python.md:0
#: ../../../chapters/1-concepts/3-bit_depths/python.md:0
msgid "Signed integer"
msgstr "Ganzzahl mit Vorzeichen"

#: ../../../chapters/1-concepts/3-bit_depths/python.md:0
msgid "`int8`"
msgstr "`int8`"

#: ../../../chapters/1-concepts/3-bit_depths/python.md:0
#: ../../../chapters/1-concepts/3-bit_depths/python.md:0
msgid "16"
msgstr "16"

#: ../../../chapters/1-concepts/3-bit_depths/python.md:0
msgid "`uint16`"
msgstr "`uint16`"

#: ../../../chapters/1-concepts/3-bit_depths/python.md:0
msgid "`int16`"
msgstr "`int16`"

#: ../../../chapters/1-concepts/3-bit_depths/python.md:0
#: ../../../chapters/1-concepts/3-bit_depths/python.md:0
#: ../../../chapters/1-concepts/3-bit_depths/python.md:0
msgid "32"
msgstr "32"

#: ../../../chapters/1-concepts/3-bit_depths/python.md:0
msgid "`uint32`"
msgstr "`uint32`"

#: ../../../chapters/1-concepts/3-bit_depths/python.md:0
msgid "`int32`"
msgstr "`int32`"

#: ../../../chapters/1-concepts/3-bit_depths/python.md:0
#: ../../../chapters/1-concepts/3-bit_depths/python.md:0
msgid "Floating point"
msgstr "Fließkomma"

#: ../../../chapters/1-concepts/3-bit_depths/python.md:0
msgid "`float32`"
msgstr "Float32"

#: ../../../chapters/1-concepts/3-bit_depths/python.md:0
msgid "64"
msgstr "64"

#: ../../../chapters/1-concepts/3-bit_depths/python.md:0
msgid "`float64`"
msgstr "Float64"

#: ../../../chapters/1-concepts/3-bit_depths/python.md:50
msgid "The `dtype` for any array is easy to check:"
msgstr "Der `dtype` für ein beliebiges Array ist leicht zu überprüfen:"

#: ../../../chapters/1-concepts/3-bit_depths/python.md:58
msgid ""
"We can print some basic statistics, as before. In particular, we can check "
"that the minimum and maximum values fall inside the expected range."
msgstr ""
"Wir können wie zuvor einige grundlegende Statistiken ausdrucken. "
"Insbesondere können wir prüfen, ob die Mindest- und Höchstwerte innerhalb "
"des erwarteten Bereichs liegen."

#: ../../../chapters/1-concepts/3-bit_depths/python.md:73
msgid "Fun with float32"
msgstr "Spaß mit float32"

#: ../../../chapters/1-concepts/3-bit_depths/python.md:75
msgid "If we want to change the type, that is easy to do as well."
msgstr ""
"Wenn wir den Typ ändern wollen, ist auch das leicht zu bewerkstelligen."

#: ../../../chapters/1-concepts/3-bit_depths/python.md:77
msgid ""
"This makes use of the line `import numpy as np` to give us access to more "
"NumPy properties & functions."
msgstr ""
"Dies macht Gebrauch von der Zeile `import numpy as np`, um uns Zugang zu "
"mehr NumPy-Eigenschaften und -Funktionen zu geben."

#: ../../../chapters/1-concepts/3-bit_depths/python.md:83
msgid "This should convert our image into 32-bit floating point."
msgstr "Dies sollte unser Bild in 32-Bit-Gleitkomma umwandeln."

#: ../../../chapters/1-concepts/3-bit_depths/python.md:85
msgid ""
"However, when trying out a new command it is always a good idea to check it "
"does what was expected. We can do that by showing the image and printing "
"statistics again."
msgstr ""
"Beim Ausprobieren eines neuen Befehls ist es jedoch immer eine gute Idee, zu"
" überprüfen, ob er das tut, was erwartet wurde. Wir können dies tun, indem "
"wir das Bild anzeigen und die Statistiken erneut drucken."

#: ../../../chapters/1-concepts/3-bit_depths/python.md:97
msgid ""
"That looks fine to me, but let's be extra careful and have NumPy check if "
"the values are really identical."
msgstr ""
"Für mich sieht das gut aus, aber wir sollten besonders vorsichtig sein und "
"NumPy prüfen lassen, ob die Werte wirklich identisch sind."

#: ../../../chapters/1-concepts/3-bit_depths/python.md:99
msgid "One way we might do that is with `==`."
msgstr "Eine Möglichkeit, dies zu tun, ist `==`."

#: ../../../chapters/1-concepts/3-bit_depths/python.md:105
msgid ""
"Hmmm, that looks quite convincing - it gives us an image that has either "
"`True` or `False` for every single pixel. But because of the limits of what "
"is printing, it really only shows that the pixels at the corners of our "
"image match."
msgstr ""
"Hmmm, das sieht ziemlich überzeugend aus - es gibt uns ein Bild, das für "
"jedes einzelne Pixel entweder `True` oder `False` hat. Aber wegen der "
"Grenzen des Drucks zeigt es wirklich nur, dass die Pixel in den Ecken "
"unseres Bildes übereinstimmen."

#: ../../../chapters/1-concepts/3-bit_depths/python.md:108
msgid ""
"If we want to ensure that *all* pixels are the same, we can use `np.all`"
msgstr ""
"Wenn wir sicherstellen wollen, dass *alle* Pixel gleich sind, können wir "
"`np.all` verwenden"

#: ../../../chapters/1-concepts/3-bit_depths/python.md:114
msgid "**Success!**"
msgstr "**Erfolg!**"

#: ../../../chapters/1-concepts/3-bit_depths/python.md:116
msgid ""
"But... skepticism belongs in science - particularly in image analysis - and "
"it's always worth testing things from multiple angles, just in case. So "
"let's check the statistics as well:"
msgstr ""
"Aber... Skepsis gehört in der Wissenschaft dazu - besonders in der "
"Bildanalyse - und es lohnt sich immer, Dinge aus mehreren Blickwinkeln zu "
"prüfen, nur für den Fall. Überprüfen wir also auch die Statistiken:"

#: ../../../chapters/1-concepts/3-bit_depths/python.md:136
msgid "Uh-oh... that was unexpected."
msgstr "Oh-oh... das war unerwartet."

#: ../../../chapters/1-concepts/3-bit_depths/python.md:138
msgid ""
"**Somehow, we have two images with exactly the same pixel values - and yet "
"they have a different mean value??!**"
msgstr ""
"**Irgendwie haben wir zwei Bilder mit genau denselben Pixelwerten - und doch"
" haben sie einen unterschiedlichen Mittelwert?!"

#: ../../../chapters/1-concepts/3-bit_depths/python.md:140
msgid ""
"It doesn't seem to make sense. We need to investigate by printing the actual"
" values:"
msgstr ""
"Das scheint keinen Sinn zu ergeben. Wir müssen das untersuchen, indem wir "
"die tatsächlichen Werte ausdrucken:"

#: ../../../chapters/1-concepts/3-bit_depths/python.md:147
msgid ""
"Ok, so the means are actually very very close - and we need to go a long way"
" after the decimal point before there is a difference."
msgstr ""
"Ok, die Mittelwerte liegen also sehr nahe beieinander - und wir müssen weit "
"hinter dem Komma gehen, bevor es einen Unterschied gibt."

#: ../../../chapters/1-concepts/3-bit_depths/python.md:149
msgid "This is an example of a **precision error**."
msgstr "Dies ist ein Beispiel für einen **Präzisionsfehler**."

#: ../../../chapters/1-concepts/3-bit_depths/python.md:151
msgid ""
"Precisions errors are common when coding, and we need to always be on our "
"guard against them. They can occur in the midst of calculations because "
"intermediate results aren't stored with perfect precision, but rather "
"rounded to a value that is close."
msgstr ""
"Präzisionsfehler kommen beim Programmieren häufig vor, und wir müssen immer "
"auf der Hut vor ihnen sein. Sie können inmitten von Berechnungen auftreten, "
"weil Zwischenergebnisse nicht mit perfekter Genauigkeit gespeichert werden, "
"sondern auf einen Wert gerundet werden, der nahe dran ist."

#: ../../../chapters/1-concepts/3-bit_depths/python.md:154
msgid ""
"This happens both with integer and floating-point types - but of course it "
"is more severe when working with integers. As an illustration using decimal "
"values (since it's harder for most of us to think in binary), let's consider"
" dividing a number by 3 and then multiplying the result by 3. "
"Mathematically, we *should* get the same result."
msgstr ""
"Dies gilt sowohl für Ganzzahlen als auch für Fließkommazahlen - aber "
"natürlich ist es bei Ganzzahlen gravierender. Zur Veranschaulichung anhand "
"von Dezimalwerten (da es für die meisten von uns schwieriger ist, in binären"
" Werten zu denken), betrachten wir die Division einer Zahl durch 3 und die "
"anschließende Multiplikation des Ergebnisses mit 3. Mathematisch gesehen "
"*sollten* wir das gleiche Ergebnis erhalten."

#: ../../../chapters/1-concepts/3-bit_depths/python.md:158
msgid ""
"However, if we do our calculations using only with integers we instead see"
msgstr ""
"Wenn wir jedoch unsere Berechnungen nur mit ganzen Zahlen durchführen, sehen"
" wir stattdessen"

#: ../../../chapters/1-concepts/3-bit_depths/python.md:160
msgid ""
"\n"
"\\begin{align}\n"
"\\frac{10}{3}  & \\approx 3 \\\\\n"
"\\\\\n"
"3 \\times 3  & = 9\n"
"\\end{align}\n"
msgstr ""
"\n"
"\\anfangen{align}\n"
"\\frac{10}{3} &amp; \\ca. 3 \\\\\n"
"\\\\\n"
"3 \\mal 3 &amp; = 9\n"
"\\end{align}\n"

#: ../../../chapters/1-concepts/3-bit_depths/python.md:168
msgid ""
"On the other hand, if we use floating point (to three decimal places for "
"illustration) we would get"
msgstr ""
"Wenn wir hingegen Fließkommazahlen (mit drei Dezimalstellen zur "
"Veranschaulichung) verwenden, erhalten wir"

#: ../../../chapters/1-concepts/3-bit_depths/python.md:170
msgid ""
"\n"
"\\begin{align}\n"
"\\frac{10}{3} & \\approx 3.333 \\\\\n"
"\\\\\n"
"3.333 \\times 3 & = 9.999\n"
"\\end{align}\n"
msgstr ""
"\n"
"\\anfangen{align}\n"
"\\frac{10}{3} &amp; \\ca. 3.333 \\\\\\\n"
"\\\\\n"
"3,333 \\mal 3 &amp; = 9,999\n"
"\\end{align}\n"

#: ../../../chapters/1-concepts/3-bit_depths/python.md:178
msgid ""
"*Neither* gives the mathematically 'correct' final result of 10, because of "
"the precision errors."
msgstr ""
"*Keines von beiden ergibt das mathematisch \"korrekte\" Endergebnis von 10, "
"weil die Genauigkeit nicht stimmt."

#: ../../../chapters/1-concepts/3-bit_depths/python.md:180
msgid ""
"Consequently, rather than checking whether non-integer values are identical "
"with one another by using `==`, we often need to check if they are very "
"close to one another. We can use `np.allclose` for that."
msgstr ""
"Anstatt zu prüfen, ob nicht-ganzzahlige Werte miteinander identisch sind, "
"indem man `==` verwendet, muss man daher oft prüfen, ob sie sehr nahe "
"beieinander liegen. Hierfür können wir `np.allclose` verwenden."

#: ../../../chapters/1-concepts/3-bit_depths/python.md:187
msgid "Towards 8-bit"
msgstr "Auf dem Weg zu 8-Bit"

#: ../../../chapters/1-concepts/3-bit_depths/python.md:189
msgid ""
"Previously, we had an image with a low bit depth and we increased the bit-"
"depth. This was fine."
msgstr ""
"Zuvor hatten wir ein Bild mit einer geringen Bittiefe und haben die Bittiefe"
" erhöht. Das war in Ordnung."

#: ../../../chapters/1-concepts/3-bit_depths/python.md:192
msgid "Time now to go the opposite direction, and again check that it works."
msgstr ""
"Nun ist es an der Zeit, in die entgegengesetzte Richtung zu gehen und erneut"
" zu prüfen, ob es funktioniert."

#: ../../../chapters/1-concepts/3-bit_depths/python.md:205
msgid "Oh dear. This is categorically **not** all right."
msgstr "Oh je. Das ist kategorisch **nicht** in Ordnung."

#: ../../../chapters/1-concepts/3-bit_depths/python.md:208
msgid ""
"Our minimum and maximum values are in the range 0-255 - which is all that's "
"permitted in an unsigned integer, 8-bit image, so that makes sense. But the "
"appearance doesn't make much sense at first look."
msgstr ""
"Unsere Minimal- und Maximalwerte liegen im Bereich von 0-255 - das ist "
"alles, was in einem vorzeichenlosen 8-Bit-Ganzzahlbild zulässig ist, also "
"macht das Sinn. Aber das Aussehen macht auf den ersten Blick nicht viel "
"Sinn."

#: ../../../chapters/1-concepts/3-bit_depths/python.md:211
msgid ""
"Whenever we reduce the bit-depth of an image, we know that the pixel values "
"will need to fit into the new range. In the main text, we considered two "
"ways that could happen: by clipping or by rescaling."
msgstr ""
"Wenn wir die Bittiefe eines Bildes verringern, wissen wir, dass die "
"Pixelwerte in den neuen Bereich passen müssen. Im Haupttext haben wir zwei "
"Möglichkeiten betrachtet, wie dies geschehen kann: durch Beschneiden oder "
"durch Neuskalierung."

#: ../../../chapters/1-concepts/3-bit_depths/python.md:214
msgid ""
"Here, we are meeting a slight idiosyncracy of NumPy that we really need to "
"be careful about: *by default, it will neither clip nor rescale!*"
msgstr ""
"Hier stoßen wir auf eine kleine Eigenart von NumPy, auf die wir unbedingt "
"achten müssen: *Standardmäßig wird es weder beschneiden noch neu skalieren!"

#: ../../../chapters/1-concepts/3-bit_depths/python.md:216
msgid ""
"But what *does* it do? Rather than googling or crawling around the NumPy "
"docs, we can experiment."
msgstr ""
"Aber was *macht* es? Anstatt zu googeln oder in den NumPy-Dokumenten zu "
"stöbern, können wir experimentieren."

#: ../../../chapters/1-concepts/3-bit_depths/python.md:247
msgid ""
"So it seems that NumPy *wraps around*: when converting 256 to `uint8` it "
"becomes 0, 257 becomes 1 and so on."
msgstr ""
"Es scheint also, dass NumPy *umgeht*: bei der Umwandlung von 256 in `uint8` "
"wird es 0, 257 wird 1 und so weiter."

#: ../../../chapters/1-concepts/3-bit_depths/python.md:249
msgid ""
"This means that, to convert an image to `uint8`, we need to take matters "
"into our own hands to reduce data loss. To begin, let's clip."
msgstr ""
"Das bedeutet, dass wir, um ein Bild in `uint8` zu konvertieren, die Dinge "
"selbst in die Hand nehmen müssen, um Datenverluste zu vermeiden. Beginnen "
"wir mit einem Clip."

#: ../../../chapters/1-concepts/3-bit_depths/python.md:254
msgid "Converting with clipping"
msgstr "Konvertieren mit Clipping"

#: ../../../chapters/1-concepts/3-bit_depths/python.md:256
msgid ""
"The trick is to clip the image this *before* converting it with `astype`:"
msgstr ""
"Der Trick besteht darin, das Bild *vor* der Konvertierung mit `astype` zu "
"beschneiden:"

#: ../../../chapters/1-concepts/3-bit_depths/python.md:270
msgid ""
"This has worked in a sense, but not a very good one. Our pixels are in the "
"range 0-255, but recall from the histogram above that almost all the pixels "
"were originally above 255 in value. When we clipped, these pixels all simply"
" became 255 - and all further distinction was lost."
msgstr ""
"Das hat in gewisser Weise funktioniert, aber nicht sehr gut. Unsere Pixel "
"liegen im Bereich 0-255, aber aus dem obigen Histogramm geht hervor, dass "
"fast alle Pixel ursprünglich einen Wert von über 255 hatten. Beim "
"Beschneiden wurden diese Pixel einfach zu 255 - und jede weitere "
"Unterscheidung ging verloren."

#: ../../../chapters/1-concepts/3-bit_depths/python.md:276
msgid "Converting with rescaling"
msgstr "Konvertierung mit Neuskalierung"

#: ../../../chapters/1-concepts/3-bit_depths/python.md:278
msgid ""
"We can calculate the maximum possible value of an unsigned integer for a "
"specific bit depth $N$ as $2^{N}-1$."
msgstr ""
"Wir können den maximal möglichen Wert einer ganzen Zahl ohne Vorzeichen für "
"eine bestimmte Bittiefe $N$ als $2^{N}-1$ berechnen."

#: ../../../chapters/1-concepts/3-bit_depths/python.md:280
msgid "With Numpy, we can use the `**` operator for this."
msgstr "Bei Numpy können wir dafür den Operator `**` verwenden."

#: ../../../chapters/1-concepts/3-bit_depths/python.md:290
msgid ""
"Therefore, to convert our 16-bit image to 8-bit by rescaling, we could "
"multiply the pixel values by the ratio of these maximum values, i.e. by "
"$\\frac{255}{65535}$"
msgstr ""
"Um unser 16-Bit-Bild durch Neuskalierung in ein 8-Bit-Bild umzuwandeln, "
"könnten wir die Pixelwerte mit dem Verhältnis dieser Maximalwerte "
"multiplizieren, d. h. mit $\\frac{255}{65535} $"

#: ../../../chapters/1-concepts/3-bit_depths/python.md:305
msgid ""
"This has *kind of* worked, but note that the maximum pixel value is very "
"low. We have lost a *lot* of information: squeezing our values into a very "
"small range of integers, much less than the full 256 available to us."
msgstr ""
"Das hat *einigermaßen* funktioniert, aber beachten Sie, dass der maximale "
"Pixelwert sehr niedrig ist. Wir haben eine *große* Menge an Informationen "
"verloren: Wir haben unsere Werte in einen sehr kleinen Bereich von "
"Ganzzahlen gequetscht, viel weniger als die vollen 256, die uns zur "
"Verfügung stehen."

#: ../../../chapters/1-concepts/3-bit_depths/python.md:308
msgid ""
"Ideally, we would usually like to rescale our image while preserving as much"
" of the information as possible. We would like the values in our output "
"image to fill the full range of 0-255."
msgstr ""
"Im Idealfall möchten wir unser Bild skalieren und dabei so viele "
"Informationen wie möglich beibehalten. Wir möchten, dass die Werte in "
"unserem Ausgabebild den gesamten Bereich von 0-255 ausfüllen."

#: ../../../chapters/1-concepts/3-bit_depths/python.md:311
msgid "We can do this in five steps:"
msgstr "Wir können dies in fünf Schritten tun:"

#: ../../../chapters/1-concepts/3-bit_depths/python.md:312
msgid ""
"Convert the image to floating point (so that we don't lose info to rounding)"
msgstr ""
"Konvertieren Sie das Bild in Fließkomma (damit wir keine Informationen durch"
" Rundung verlieren)"

#: ../../../chapters/1-concepts/3-bit_depths/python.md:313
msgid "Subtract the minimum value, so that the minimum becomes zero"
msgstr "Subtrahieren Sie den Mindestwert, so dass das Minimum Null wird."

#: ../../../chapters/1-concepts/3-bit_depths/python.md:314
msgid "Divide by the new maximum value, so that the maximum becomes one"
msgstr ""
"Durch den neuen Höchstwert dividieren, so dass der Höchstwert eins wird"

#: ../../../chapters/1-concepts/3-bit_depths/python.md:315
msgid "Multiply by 255"
msgstr "Multiplizieren mit 255"

#: ../../../chapters/1-concepts/3-bit_depths/python.md:316
msgid "Convert to 8-bit"
msgstr "In 8-Bit konvertieren"

#: ../../../chapters/1-concepts/3-bit_depths/python.md:334
msgid ""
"As conversions to 8-bit go, rescaling certainly looks like it was more "
"successful than simply clipping, and the output fills the full range "
"available."
msgstr ""
"Bei der Konvertierung in 8-Bit sieht es so aus, als ob die Neuskalierung "
"erfolgreicher war als das einfache Beschneiden, und die Ausgabe füllt den "
"gesamten verfügbaren Bereich aus."

#: ../../../chapters/1-concepts/3-bit_depths/python.md:336
msgid ""
"Nevertheless, **don't forget that the statistics are different, and we have "
"changed the pixel values!**"
msgstr ""
"Trotzdem **vergessen Sie nicht, dass die Statistiken anders sind und wir die"
" Pixelwerte geändert haben!**"

#: ../../../chapters/1-concepts/3-bit_depths/python.md:338
msgid ""
"Therefore this isn't something we should do without a very good reason."
msgstr "Deshalb sollten wir dies nicht ohne einen sehr guten Grund tun."

#: ../../../chapters/1-concepts/3-bit_depths/python.md:342
msgid "Summary"
msgstr "Zusammenfassung"

#: ../../../chapters/1-concepts/3-bit_depths/python.md:344
msgid ""
"**The key message here is that it is very easy to change the bit-depth and "
"type of an image - but also very easy for things to go wrong.**"
msgstr ""
"**Die Schlüsselbotschaft hier ist, dass es sehr einfach ist, die Bittiefe "
"und den Typ eines Bildes zu ändern - aber es kann auch sehr leicht etwas "
"schief gehen.**"

#: ../../../chapters/1-concepts/3-bit_depths/python.md:346
msgid ""
"Sometimes these are small precision errors. Sometimes they are big, data, "
"destroying errors."
msgstr ""
"Manchmal sind es kleine Präzisionsfehler. Manchmal sind es große, Daten "
"zerstörende Fehler."

#: ../../../chapters/1-concepts/3-bit_depths/python.md:349
msgid ""
"But if you know how to show images, make measurements and generate "
"histograms, you can always check what is happening to the data at each step."
" This can help you make sure nothing is being lost along the way."
msgstr ""
"Wenn Sie jedoch wissen, wie man Bilder anzeigt, Messungen durchführt und "
"Histogramme erstellt, können Sie jederzeit überprüfen, was mit den Daten bei"
" jedem Schritt geschieht. So können Sie sicherstellen, dass nichts auf dem "
"Weg verloren geht."
